stages: 
  - token
  - build
  - test

generate-token:
  stage: token
  image: ubuntu:xenial
  script:
    - apt update && apt install jq git curl -y
    - git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@${CI_SERVER_HOST}/${GITLAB_USER_LOGIN}/artifactory-tokenizer.git
    - cd artifactory-tokenizer
    - ./get_token.sh conan-deployers > token.json
    - cat token.json | jq -r '.access_token' > ../access_token
  artifacts:
    paths:
      - access_token
    expire_in: 20 mins
  except:
    - tags # avoids duplicate builds for tags

build-linux:
  stage: build
  image: conanio/gcc8
  before_script:
    - conan remote add conan-local https://artifactory.audeering.com/artifactory/api/conan/conan
    - conan config set general.revisions_enabled=True
    - conan user -p $(cat access_token) -r conan-local ${GITLAB_USER_LOGIN}
  script:
    - mkdir build; cd build
    - conan install ..
    - cmake .. -DCMAKE_BUILD_TYPE=Release -DBUILD_TOOLS=ON -DBUILD_TESTS=ON
    - make
  artifacts:
    paths:
      - build/lib/libaudresample.a
      - build/bin/src_oneshot
      - build/bin/src_streaming
      - build/bin/audresample-test
      
build-linux-shared:
  stage: build
  image: conanio/gcc8
  before_script:
    - conan remote add conan-local https://artifactory.audeering.com/artifactory/api/conan/conan
    - conan config set general.revisions_enabled=True
    - conan user -p $(cat access_token) -r conan-local ${GITLAB_USER_LOGIN}
  script:
    - mkdir build; cd build
    - conan install ..
    - cmake .. -DBUILD_SHARED_LIB=ON -DCMAKE_BUILD_TYPE=Release -DBUILD_TOOLS=ON
    - make
  artifacts:
    paths:
      - build/lib/libaudresample.so
      - build/bin/src_oneshot
      - build/bin/src_streaming

build-windows:
  stage: build
  tags:
    - windows
  variables:
    CONAN_REVISIONS_ENABLED: 1
    CONAN_USER_HOME: "C:\\ci-jobs\\${CI_JOB_ID}"
  before_script:
    - conan remote add conan-local https://artifactory.audeering.com/artifactory/api/conan/conan
    - conan user -p $(cat access_token) -r conan-local ${GITLAB_USER_LOGIN}
  script:
    - mkdir build; cd build
    - conan install .. -s compiler.runtime=MT
    - cmake -DCMAKE_MSVC_RUNTIME_LIBRARY=MultiThreaded$<$<CONFIG:Debug>:Debug> .. -G "Visual Studio 16 2019" -A x64
    - cmake --build . --config Release
  artifacts:
    paths:
      - build/lib/audresample.lib
  after_script:
    - rm -r -fo C:/ci-jobs/${CI_JOB_ID} # Cleanup workspace

build-windows-shared:
  stage: build
  tags:
    - windows
  variables:
    CONAN_REVISIONS_ENABLED: 1
    CONAN_USER_HOME: "C:\\ci-jobs\\${CI_JOB_ID}"
  before_script:
    - conan remote add conan-local https://artifactory.audeering.com/artifactory/api/conan/conan
    - conan user -p $(cat access_token) -r conan-local ${GITLAB_USER_LOGIN}
  script:
    - mkdir build; cd build
    - conan install .. -s compiler.runtime=MT
    - cmake -DCMAKE_MSVC_RUNTIME_LIBRARY=MultiThreaded$<$<CONFIG:Debug>:Debug> .. -DBUILD_SHARED_LIB=ON -G "Visual Studio 16 2019" -A x64
    - cmake --build . --config Release
  artifacts:
    paths:
      - build/bin/audresample.dll
  after_script:
    - rm -r -fo C:/ci-jobs/${CI_JOB_ID} # Cleanup workspace

build-macos:
  stage: build
  tags:
    - osx
  before_script:
    - conan remote add conan-local https://artifactory.audeering.com/artifactory/api/conan/conan || true
    - conan config set general.revisions_enabled=True
    - conan user -p $(cat access_token) -r conan-local ${GITLAB_USER_LOGIN}
  script:
    - mkdir build; cd build
    - conan install ..
    - cmake .. -DCMAKE_BUILD_TYPE=Release -DBUILD_TOOLS=ON -DBUILD_TESTS=ON
    - make
  artifacts:
    paths:
      - build/lib/libaudresample.a
      - build/bin/src_oneshot
      - build/bin/src_streaming
      - build/bin/audresample-test
      
build-macos-shared:
  stage: build
  tags:
    - osx
  before_script:
    - conan remote add conan-local https://artifactory.audeering.com/artifactory/api/conan/conan || true
    - conan config set general.revisions_enabled=True
    - conan user -p $(cat access_token) -r conan-local ${GITLAB_USER_LOGIN}
  script:
    - mkdir build; cd build
    - conan install ..
    - cmake .. -DBUILD_SHARED_LIB=ON -DCMAKE_BUILD_TYPE=Release -DBUILD_TOOLS=ON
    - make
  artifacts:
    paths:
      - build/lib/libaudresample.dylib
      - build/bin/src_oneshot
      - build/bin/src_streaming

linux-test:
  stage: test
  image: conanio/gcc8
  before_script:
    - conan remote add conan-local https://artifactory.audeering.com/artifactory/api/conan/conan
    - conan config set general.revisions_enabled=True
    - conan user -p $(cat access_token) -r conan-local ${GITLAB_USER_LOGIN}
    - cd build
    - conan install ..
    - cd ..
  script:
    - build/bin/audresample-test
  dependencies:
    - build-linux
    - generate-token

macos-test:
  stage: test
  tags:
    - osx
  before_script:
    - conan remote add conan-local https://artifactory.audeering.com/artifactory/api/conan/conan || true
    - conan config set general.revisions_enabled=True
    - conan user -p $(cat access_token) -r conan-local ${GITLAB_USER_LOGIN}
    - cd build
    - conan install ..
    - cd ..
  script:
    - build/bin/audresample-test
  dependencies:
    - build-macos
    - generate-token
